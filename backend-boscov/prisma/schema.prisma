// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int      @id @default(autoincrement()) 
  nome            String   
  senha           String  
  email           String   @unique  
  status          String   
  username        String   @unique 
  dataNascimento  DateTime 
  dataCriacao     DateTime @default(now())  
  dataAtualizacao DateTime @updatedAt  
  tipoUsuario     TipoUsuario  @default(COMUM)
  deletedAt       DateTime? @db.Timestamptz 
  avaliacoes      Avaliacao[] 
}

enum TipoUsuario {
  ADM
  COMUM
}


model Avaliacao {
  idUsuario   Int      
  idFilme     Int      
  nota        Float    
  comentario  String   
  deletedAt   DateTime? @db.Timestamptz 
  usuario     Usuario @relation(fields: [idUsuario], references: [id]) 
  filme       Filme   @relation(fields: [idFilme], references: [id]) 
  @@id([idUsuario, idFilme]) 
}

model Filme {
  id            Int           @id @default(autoincrement())  
  nome          String        
  diretor       String        
  anoLancamento Int           
  duracao       Int           
  produtora     String        
  classificacao String        
  poster        String        
  deletedAt     DateTime?     @db.Timestamptz 
  generos       GeneroFilme[] 
  avaliacoes    Avaliacao[]   
}


model GeneroFilme {
  idGenero Int    
  idFilme  Int    
  
  genero  Genero @relation(fields: [idGenero], references: [id]) 
  filme   Filme   @relation(fields: [idFilme], references: [id]) 

  @@id([idGenero, idFilme])  
}


model Genero {
  id          Int           @id @default(autoincrement())  
  descricao   String      
  generosFilme GeneroFilme[]
}
